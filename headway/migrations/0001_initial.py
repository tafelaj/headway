# Generated by Django 2.2.7 on 2020-02-18 01:55

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import headway.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Enter a Student ID for student Accounts or Email for lecturer Accounts.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True, verbose_name='email address')),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('is_student', models.BooleanField(default=True)),
                ('is_lecturer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(default='CODE_default', help_text='Enter Course Code', max_length=20)),
                ('summary', models.TextField(blank=True, max_length=600, null=True)),
                ('credits', models.IntegerField(default=0, null=True)),
                ('mandatory', models.BooleanField(default=True)),
                ('year', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')], default=1)),
                ('semester', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8')], default=1)),
                ('level', models.CharField(choices=[('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('Bachelor', 'Bachelor'), ('Master', 'Master')], default='Bachelor', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CourseRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('cleared', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='registered_course', to='headway.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExamRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(auto_created=True)),
                ('courses', models.ManyToManyField(related_name='examRegisterCourses', to='headway.Course')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exams', to='headway.Exam')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('home_address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('marital_status', models.CharField(blank=True, choices=[('M', 'Married'), ('U', 'Unmarried')], max_length=1, null=True)),
                ('relation', models.CharField(choices=[('gma', 'Grand Mother'), ('gda', 'Grand Father'), ('dad', 'Father'), ('mom', 'Mother'), ('sis', 'Sister'), ('bro', 'Brother'), ('unc', 'Uncle'), ('aun', 'Auntie'), ('cuz', 'Cousin'), ('son', 'Son'), ('dot', 'Daughter')], max_length=3)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_start', models.DateField(auto_created=True, auto_now_add=True)),
                ('name', models.CharField(help_text='Enter Institution Name', max_length=100)),
                ('trail', models.BooleanField(default=True)),
                ('active_subscription', models.BooleanField(default=False)),
                ('subscription_type', models.CharField(max_length=1)),
                ('subscription_end', models.DateField()),
                ('short_name', models.CharField(default='INSTITUTE', help_text='Enter A Short Abbreviation OfYour Institutes Name (10 Characters Max.)', max_length=10)),
                ('theme_color', models.CharField(choices=[('White', 'White'), ('Blue', 'Blue'), ('Green', 'Green'), ('Orange', 'Orange'), ('Yellow', 'Yellow'), ('Red', 'Red')], default=('White', 'White'), max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField(auto_created=True)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(help_text='Enter Message Content here.')),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('staff_only', models.BooleanField(default=True, help_text='Who should See This Message.')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Institution')),
            ],
            options={
                'verbose_name_plural': 'News',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('summary', models.TextField(blank=True, null=True)),
                ('level', models.CharField(choices=[('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('Bachelor', 'Bachelor'), ('Master', 'Master')], help_text='Qualification Level For The Program.', max_length=10)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('date_of_join', models.DateTimeField(auto_created=True)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('home_address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('marital_status', models.CharField(blank=True, choices=[('M', 'Married'), ('U', 'Unmarried')], max_length=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('qualification', models.CharField(help_text='Enter Highest Qualification Attained.', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Uploads',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_time', models.DateTimeField(auto_created=True, auto_now=True)),
                ('name', models.CharField(help_text='Enter A Name For The File', max_length=100)),
                ('file', models.FileField(help_text='Choose File To Be Uploaded', max_length=150, upload_to=headway.models.upload_dir_files)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('town', models.CharField(blank=True, max_length=100, null=True)),
                ('home_address', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('marital_status', models.CharField(blank=True, choices=[('M', 'Married'), ('U', 'Unmarried')], max_length=1, null=True)),
                ('picture', models.ImageField(blank=True, default='no-img.png', null=True, upload_to='')),
                ('year', models.IntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year')], default=1)),
                ('semester', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8')], default=1)),
                ('level', models.CharField(choices=[('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('Bachelor', 'Bachelor'), ('Master', 'Master')], default=1, max_length=100)),
                ('courses', models.ManyToManyField(blank=True, related_name='courses', through='headway.CourseRegister', to='headway.Course')),
                ('exams', models.ManyToManyField(related_name='students', through='headway.ExamRegister', to='headway.Exam')),
                ('guardian', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='headway.Guardian')),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='headway.Program')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecentNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.News')),
            ],
            options={
                'verbose_name_plural': 'Recent News',
            },
        ),
        migrations.CreateModel(
            name='Papars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(max_length=150, upload_to=headway.models.upload_dir_papers)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='examregister',
            name='student',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='headway.Student'),
        ),
        migrations.AddField(
            model_name='exam',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Institution'),
        ),
        migrations.AddField(
            model_name='courseregister',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='register', to='headway.Student'),
        ),
        migrations.AddField(
            model_name='course',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Institution'),
        ),
        migrations.AddField(
            model_name='course',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Program'),
        ),
        migrations.AddField(
            model_name='user',
            name='institution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='headway.Institution'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateTimeField()),
                ('credit', models.IntegerField(blank=True, help_text='Credit for this Test. Enter a number from 0 to 10depending on the weight this test will contribute tothe final(Aggregated) test score for this course.', null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Course')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Program')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Lecturer')),
            ],
        ),
        migrations.AddField(
            model_name='lecturer',
            name='courses',
            field=models.ManyToManyField(blank=True, related_name='teaches', to='headway.Course'),
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_graded', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('marks', models.FloatField(default=0, null=True)),
                ('grade', models.CharField(choices=[('A+', 'A+'), ('A', 'A'), ('B+', 'B+'), ('B', 'B'), ('C+', 'C+'), ('C', 'C'), ('D', 'D')], max_length=2, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Course')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='headway.Student')),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='headway.Lecturer')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='course_lecturer',
            field=models.ManyToManyField(blank=True, related_name='course_teacher', to='headway.Lecturer'),
        ),
    ]
